@page "/add-product"

@using BlazorDevApp.Core.Entities
@using BlazorDevApp.Core.Interfaces
@using BlazorDevApp.Web.Models

@inject NavigationManager _navigationManager
@inject IRepository<Product> _productRepository

<div class="row">
    <div class="col-xl-6 col-lg-9">
        <div class="card">
            <div class="card-body">
                <h3 class="card-title">Add new Product</h3>
                <EditForm Model="productModel" OnValidSubmit="@AddNewProduct">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="productName" class="form-label m-0 p-0">Name</label>
                        <InputText class="form-control" id="productName" @bind-Value="productModel.Name" />
                    </div>
                    <div class="mb-3">
                        <label for="productDescription" class="form-label m-0 p-0">Description</label>
                        <InputTextArea class="form-control" id="productDescription" @bind-Value="productModel.Description" />
                    </div>
                    <div class="mb-3">
                        <label for="productPrice" class="form-label m-0 p-0">Price</label>
                        <InputNumber class="form-control" id="productPrice" @bind-Value="productModel.Price" />
                    </div>
                    <div class="mb-3">
                        <button type="submit" class="btn btn-success float-end"><span class="oi oi-plus"></span> Add new Product</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private AddProductModel productModel = new AddProductModel();

    public async Task AddNewProduct()
    {
        var product = new Product(productModel.Name, productModel.Description, productModel.Price);
        await _productRepository.AddAsync(product);
        await _productRepository.SaveChangesAsync();

        _navigationManager.NavigateTo("products");
    }
}
